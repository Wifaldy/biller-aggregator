// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum balance_type {
  DEPOSIT
  SETTLEMENT
}

enum transaction_type {
  INQUIRY
  PURCHASE
}

enum transaction_status {
  SUCCESS
  PENDING
  FAILED
}

model users {
  id         Int      @id @default(autoincrement())
  username   String   @unique @db.VarChar(100)
  name       String   @db.VarChar(100)
  role_id    Int
  password   String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
  role       roles    @relation(fields: [role_id], references: [id])
}

model roles {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(100)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
  users      users[]
}

model operators {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(100)
  min_digit        Int                @default(8)
  max_digit        Int                @default(20)
  created_at       DateTime           @default(now()) @db.Timestamptz()
  updated_at       DateTime           @updatedAt @db.Timestamptz()
  products         products[]
  prefix_operators prefix_operators[]
}

model product_types {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(100)
  created_at DateTime   @default(now()) @db.Timestamptz()
  updated_at DateTime   @updatedAt @db.Timestamptz()
  products   products[]
}

model products {
  id                     Int                   @id @default(autoincrement())
  operator_id            Int
  product_type_id        Int
  name                   String                @db.VarChar(100)
  description            String                @db.VarChar(100)
  code                   String                @unique @db.VarChar(100)
  operational_time_start DateTime              @db.Time()
  operational_time_end   DateTime              @db.Time()
  is_problem             Boolean               @default(false)
  is_empty               Boolean               @default(false)
  created_at             DateTime              @default(now()) @db.Timestamptz()
  updated_at             DateTime              @updatedAt @db.Timestamptz()
  operator               operators             @relation(fields: [operator_id], references: [id])
  product_type           product_types         @relation(fields: [product_type_id], references: [id])
  price_plan_products    price_plan_products[]
  product_suppliers      product_suppliers[]
}

model prefix_operators {
  id          Int       @id @default(autoincrement())
  operator_id Int
  prefix      String    @db.VarChar(100)
  created_at  DateTime  @default(now()) @db.Timestamptz()
  updated_at  DateTime  @updatedAt @db.Timestamptz()
  operator    operators @relation(fields: [operator_id], references: [id])
}

model price_plans {
  id                  Int                   @id @default(autoincrement())
  name                String                @db.VarChar(100)
  created_at          DateTime              @default(now()) @db.Timestamptz()
  updated_at          DateTime              @updatedAt @db.Timestamptz()
  price_plan_products price_plan_products[]
  partners            partners[]
}

model price_plan_products {
  id            Int         @id @default(autoincrement())
  price_plan_id Int
  product_id    Int
  sell_price    Int         @default(0)
  margin        Int         @default(0)
  is_active     Boolean     @default(true)
  created_at    DateTime    @default(now()) @db.Timestamptz()
  updated_at    DateTime    @updatedAt @db.Timestamptz()
  price_plan    price_plans @relation(fields: [price_plan_id], references: [id])
  product       products    @relation(fields: [product_id], references: [id])
}

model partners {
  id            Int          @id @default(autoincrement())
  price_plan_id Int
  name          String       @db.VarChar(100)
  email         String       @unique @db.VarChar(100)
  phone         String       @db.VarChar(100)
  address       String       @db.VarChar(100)
  balance_type  balance_type
  balance       Int          @default(0)
  is_active     Boolean      @default(true)
  username      String       @db.VarChar(100)
  password      String       @db.VarChar(100)
  pin           String       @db.VarChar(100)
  url_callback  String?      @db.VarChar(100)
  created_at    DateTime     @default(now()) @db.Timestamptz()
  updated_at    DateTime     @updatedAt @db.Timestamptz()
  price_plan    price_plans  @relation(fields: [price_plan_id], references: [id])
}

model suppliers {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(100)
  created_at        DateTime            @default(now()) @db.Timestamptz()
  updated_at        DateTime            @updatedAt @db.Timestamptz()
  product_suppliers product_suppliers[]
}

model product_suppliers {
  id          Int      @id @default(autoincrement())
  supplier_id Int
  code        String   @db.VarChar(100)
  product_id  Int
  is_active   Boolean  @default(false) @db.Boolean
  priority    Int      @default(0)
  buy_price   Int      @default(0)
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @updatedAt @db.Timestamptz()

  supplier suppliers @relation(fields: [supplier_id], references: [id])
  product  products  @relation(fields: [product_id], references: [id])
}

model transactions {
  id                 Int                @id @default(autoincrement())
  reff_client        String
  partner_id         Int
  partner_name       String
  destination_number String
  buy_price          Int
  sell_price         Int
  beginning_balance  Int
  ending_balance     Int
  product_code       String
  product_name       String
  serial_number      String?
  transaction_type   transaction_type
  product_type       String
  status             transaction_status
  supplier_id        Int
  supplier_name      String
  url_callback       String?            @db.VarChar(100)
  data               Json?
  created_at         DateTime           @default(now()) @db.Timestamptz()
  updated_at         DateTime           @updatedAt @db.Timestamptz()
}
